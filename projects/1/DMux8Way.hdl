// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/1/DMux8Way.hdl
/**
 * 8-way demultiplexor:
 * [a, b, c, d, e, f, g, h] = [in, 0,  0,  0,  0,  0,  0,  0] if sel = 000
 *                            [0, in,  0,  0,  0,  0,  0,  0] if sel = 001
 *                            [0,  0, in,  0,  0,  0,  0,  0] if sel = 010
 *                            [0,  0,  0, in,  0,  0,  0,  0] if sel = 011
 *                            [0,  0,  0,  0, in,  0,  0,  0] if sel = 100
 *                            [0,  0,  0,  0,  0, in,  0,  0] if sel = 101
 *                            [0,  0,  0,  0,  0,  0, in,  0] if sel = 110
 *                            [0,  0,  0,  0,  0,  0,  0, in] if sel = 111
 */
CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;

    PARTS:
    //// Replace this comment with your code.
    DMux4Way (in = in, sel[0] = sel[0], sel[1] = sel[1], a = aprocess, b = bprocess, c = cprocess, d = dprocess);
    DMux4Way (in = in, sel[0] = sel[0], sel[1] = sel[1], a = eprocess, b = fprocess, c = gprocess, d = hprocess);
    Not (in = sel[2], out = negsel);
    And (a = aprocess, b = negsel, out = a);
    And (a = bprocess, b = negsel, out = b);
    And (a = cprocess, b = negsel, out = c);
    And (a = dprocess, b = negsel, out = d);
    And (a = eprocess, b = sel[2], out = e);
    And (a = fprocess, b = sel[2], out = f);
    And (a = gprocess, b = sel[2], out = g);
    And (a = hprocess, b = sel[2], out = h);
}
