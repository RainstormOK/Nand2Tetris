// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/3/a/PC.hdl
/**
 * A 16-bit counter.
 * if      reset(t): out(t+1) = 0
 * else if load(t):  out(t+1) = in(t)
 * else if inc(t):   out(t+1) = out(t) + 1
 * else              out(t+1) = out(t)
 */
CHIP PC {
    IN in[16],inc, load, reset;
    OUT out[16];
    
    PARTS:
    //// Replace this comment with your code.
    Not (in = inc, out = ninc);
    Or (a = inc, b = ninc, out = all1);
    Not (in = all1, out = all0);

    //ALU (x = fout, y = fout, zx = reset, nx = all0, zy = all1, ny = all0, f = all1, no = all0, out = out1);

    Not (in = load, out = nload);
    //ALU (x = out1, y = in, zx = load, nx = all0, zy = nload, ny = all0, f = all1, no = all0, out = out2);

    ALU (x = fout, y = fout, zx = all0, nx = all1, zy = all1, ny = inc, f = all1, no = all1, out = out1); //+1

    ALU (x = out1, y = in, zx = load, nx = all0, zy = nload, ny = all0, f = all1, no = all0, out = out2); //in

    ALU (x = out2, y = fout, zx = reset, nx = all0, zy = all1, ny = all0, f = all1, no = all0, out = preout3); //0

//    ALU (x = out2, y = out2, zx = all0, nx = all1, zy = all1, ny = inc, f = all1, no = all1, out = preout3); 
    DFF16 (in = preout3, out = fout);
    Not16 (in = fout, out = nfout);
    Not16 (in = nfout, out = out);
}
